[{"G:\\мои файлы\\Ger\\news\\src\\index.tsx":"1","G:\\мои файлы\\Ger\\news\\src\\reportWebVitals.ts":"2","G:\\мои файлы\\Ger\\news\\src\\reducers\\index.ts":"3","G:\\мои файлы\\Ger\\news\\src\\App.tsx":"4","G:\\мои файлы\\Ger\\news\\src\\reducers\\authReducer.ts":"5","G:\\мои файлы\\Ger\\news\\src\\actions\\authActions.ts":"6","G:\\мои файлы\\Ger\\news\\src\\actions\\authActionsTypes.ts":"7","G:\\мои файлы\\Ger\\news\\src\\firebase\\firebase.ts":"8","G:\\мои файлы\\Ger\\news\\src\\pages\\signUp.tsx":"9","G:\\мои файлы\\Ger\\news\\src\\components\\button\\Button.tsx":"10","G:\\мои файлы\\Ger\\news\\src\\components\\input\\Input.tsx":"11","G:\\мои файлы\\Ger\\news\\src\\pages\\signin\\signIn.tsx":"12","G:\\мои файлы\\Ger\\news\\src\\components\\submit\\submit.tsx":"13","G:\\мои файлы\\Ger\\news\\src\\components\\message\\Message.tsx":"14","G:\\мои файлы\\Ger\\news\\src\\pages\\home\\home.tsx":"15","G:\\мои файлы\\Ger\\news\\src\\pages\\news\\news.tsx":"16","G:\\мои файлы\\Ger\\news\\src\\actions\\articleActions.ts":"17","G:\\мои файлы\\Ger\\news\\src\\actions\\articleActionsTypes.ts":"18","G:\\мои файлы\\Ger\\news\\src\\reducers\\articlesReducer.ts":"19","G:\\мои файлы\\Ger\\news\\src\\pages\\add\\add.tsx":"20","G:\\мои файлы\\Ger\\news\\src\\pages\\edit\\edit.tsx":"21","G:\\мои файлы\\Ger\\news\\src\\components\\textarea\\textarea.tsx":"22"},{"size":869,"mtime":1611610427781,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":310,"mtime":1611698543076,"results":"26","hashOfConfig":"24"},{"size":3111,"mtime":1611775625969,"results":"27","hashOfConfig":"24"},{"size":949,"mtime":1611776315586,"results":"28","hashOfConfig":"24"},{"size":2865,"mtime":1611775840556,"results":"29","hashOfConfig":"24"},{"size":1280,"mtime":1611605494998,"results":"30","hashOfConfig":"24"},{"size":561,"mtime":1611595890361,"results":"31","hashOfConfig":"24"},{"size":2393,"mtime":1611775971695,"results":"32","hashOfConfig":"24"},{"size":307,"mtime":1611674786183,"results":"33","hashOfConfig":"24"},{"size":629,"mtime":1611763677845,"results":"34","hashOfConfig":"24"},{"size":2015,"mtime":1611776085771,"results":"35","hashOfConfig":"24"},{"size":477,"mtime":1611703678010,"results":"36","hashOfConfig":"24"},{"size":347,"mtime":1611680374316,"results":"37","hashOfConfig":"24"},{"size":1696,"mtime":1611775946425,"results":"38","hashOfConfig":"24"},{"size":2522,"mtime":1611774028408,"results":"39","hashOfConfig":"24"},{"size":550,"mtime":1611780339871,"results":"40","hashOfConfig":"24"},{"size":703,"mtime":1611700545762,"results":"41","hashOfConfig":"24"},{"size":764,"mtime":1611700881544,"results":"42","hashOfConfig":"24"},{"size":4011,"mtime":1611775882327,"results":"43","hashOfConfig":"24"},{"size":4764,"mtime":1611775921772,"results":"44","hashOfConfig":"24"},{"size":453,"mtime":1611775205554,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1gmegtz",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},"G:\\мои файлы\\Ger\\news\\src\\index.tsx",[],["104","105"],"G:\\мои файлы\\Ger\\news\\src\\reportWebVitals.ts",[],"G:\\мои файлы\\Ger\\news\\src\\reducers\\index.ts",[],"G:\\мои файлы\\Ger\\news\\src\\App.tsx",["106"],"import React,{ FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport firebase from './firebase/firebase';\n\nimport {  signout, setError, getUserById, setLoading } from './actions/authActions';\nimport { RootState } from './reducers/index';\nimport SignUp from './pages/signUp'\nimport SignIn from './pages/signin/signIn'\nimport './App.css';\nimport Home from './pages/home/home';\nimport News from './pages/news/news';\nimport Edit from './pages/edit/edit';\nimport Add from './pages/add/add';\nimport Button from './components/button/Button';\n\n\nconst App: FC = () =>  {\n  const dispatch = useDispatch();\n  const { user, authenticated } = useSelector((state: RootState) => state.auth);\n  const isAdmin: boolean = authenticated && user?.email === 'germes547@gmail.com';\n  const logoutClickHandler = () => {\n    dispatch(signout());\n    dispatch(setLoading(false));\n  }\n\n  useEffect(() => {\n\n    const unsubscribe =  firebase.auth().onAuthStateChanged( async (user) => {\n        if(user) {\n            dispatch(setLoading(true));\n            const uid = await user.uid;\n            await dispatch(getUserById(uid));     \n        }\n        dispatch(setLoading(false));\n    })\n    return () => {\n        unsubscribe();\n      };\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(setError(''));\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <Router>\n      <header className=\"App-header\">\n      <div className='container'>\n        <nav>\n          <div className='nav__links'>\n            <Link to=\"/\">home</Link>\n            {isAdmin && <Link to=\"/add\">add</Link>}\n          </div>\n          <div className='auth__setings'>\n            {\n              !authenticated ? \n              <>\n                <Link to=\"/signin\" className='btn-auth'>Sign In</Link>\n                <Link to=\"/signup\" className='btn-auth'>Sign Up</Link>\n              </>\n              : \n              <>\n                <p>{user?.firstName}</p>\n                <Button title={'Sign Out'} click={logoutClickHandler}/>\n              </>\n            }\n\n          </div>\n        </nav>\n        </div>\n      </header>\n      <Switch>\n        <Route exact path=\"/\">\n            <Home /> \n        </Route>\n\n        <Route  path=\"/signin\">\n          {!authenticated \n          ?\n            <SignIn />\n          :\n          <Redirect to=\"/helloPage\"/>\n          }\n        </Route>\n        <Route  path=\"/helloPage\">\n        {authenticated \n        ?\n          <p>hello {user?.firstName}</p>\n        :\n          <Redirect to=\"/signin\"/>\n        }\n        </Route>\n        <Route  path=\"/signup\">\n         {!authenticated \n          ?\n            <SignUp />\n          :\n          <Redirect to=\"/helloPage\"/>\n         }\n        </Route>\n        <Route path=\"/news/:id\">\n            <News />\n        </Route>\n        <Route path=\"/edit/:id\">\n            <Edit />\n        </Route>\n        <Route path=\"/add\">\n            <Add />\n        </Route>\n      </Switch>\n      \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","G:\\мои файлы\\Ger\\news\\src\\reducers\\authReducer.ts",["107"],"import { AuthState, AuthAction, SET_USER, SET_ERROR, SET_LOADING, SET_SUCCESS, SIGN_OUT } from '../actions/authActionsTypes';\r\n\r\nconst initialState: AuthState = {\r\n    user: null,\r\n    authenticated: false,\r\n    loading: false,\r\n    error: '',\r\n    needVerification: false,\r\n    success: ''\r\n  }\r\n\r\nconst authReducer = (state = initialState, action: AuthAction) => {\r\n    switch(action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        authenticated: true\r\n    }\r\n    case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: action.payload\r\n        }\r\n    case SET_ERROR:\r\n        return {\r\n          ...state,\r\n          error: action.payload\r\n      }\r\n    case SIGN_OUT:\r\n    return {\r\n        ...state,\r\n        user: null,\r\n        authenticated: false,\r\n        loading: false\r\n    }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","G:\\мои файлы\\Ger\\news\\src\\actions\\authActions.ts",["108"],"import { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '../reducers/index';\r\nimport { SignUpData, AuthAction, SET_USER, User, SET_LOADING, SIGN_OUT, SignInData, SET_ERROR } from './authActionsTypes';\r\nimport firebase from '../firebase/firebase';\r\n\r\n\r\nexport const signup = (data: SignUpData, onError: () => void): ThunkAction<void, RootState, null, AuthAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\r\n      if(res.user) {\r\n        const userData: User = {\r\n          email: data.email,\r\n          firstName: data.firstName,\r\n          id: res.user.uid,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        };\r\n        await firebase.firestore().collection('/users').doc(res.user.uid).set(userData);\r\n        await res.user.sendEmailVerification();\r\n        // dispatch({\r\n        //   type: NEED_VERIFICATION\r\n        // });\r\n        dispatch({\r\n          type: SET_USER,\r\n          payload: userData\r\n        });\r\n      }\r\n    } catch (err) {\r\n      onError();\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: err.message\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const signin = (data: SignInData, onError: () => void): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return async dispatch => {\r\n      try {\r\n        const res = await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\r\n      } catch (err) {\r\n        onError();\r\n        dispatch(setError(err.message));\r\n      }\r\n    }\r\n  }\r\n  export const getUserById = (id: string): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return async dispatch => {\r\n      try {\r\n        const user = await firebase.firestore().collection('users').doc(id).get();\r\n        if(user.exists) {\r\n          const userData = user.data() as User;\r\n          dispatch({\r\n            type: SET_USER,\r\n            payload: userData\r\n          });\r\n        }\r\n      } catch (err) {\r\n        //console.log(err);\r\n      }\r\n    }\r\n  }\r\n  export const signout = (): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return async dispatch => {\r\n      try {\r\n        //dispatch(setLoading(true));\r\n        await firebase.auth().signOut();\r\n        dispatch({\r\n          type: SIGN_OUT\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        //dispatch(setLoading(false));\r\n      }\r\n    }\r\n  }\r\n  export const setLoading = (value: boolean): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return dispatch => {\r\n      dispatch({\r\n        type: SET_LOADING,\r\n        payload: value\r\n      });\r\n    }\r\n  }\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return dispatch => {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: msg\r\n      });\r\n    }\r\n  }\r\n  ","G:\\мои файлы\\Ger\\news\\src\\actions\\authActionsTypes.ts",[],"G:\\мои файлы\\Ger\\news\\src\\firebase\\firebase.ts",[],"G:\\мои файлы\\Ger\\news\\src\\pages\\signUp.tsx",["109"],"import React, { FC, useState, useEffect, FormEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../reducers/index';\r\nimport { signup, setError } from '../actions/authActions';\r\nimport Input from '../components/input/Input';\r\nimport Submit from '../components/submit/submit';\r\nimport Message from '../components/message/Message';\r\n\r\nconst SignUp: FC = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { error } = useSelector((state: RootState) => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(setError(''));\r\n      }, [])\r\n  \r\n    const submitHandler = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if(error) {\r\n          dispatch(setError(''));\r\n        }\r\n        setLoading(true);\r\n        dispatch(signup({ email, password, firstName }, () => setLoading(false)));\r\n    }\r\n    return (\r\n        <div className=\"form_wrapper\">\r\n            <h2>Sign Up</h2>\r\n            <Message className={error ? 'show-err' : ''} text={error}/>\r\n            <form onSubmit={submitHandler}>\r\n                <Input \r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={firstName}\r\n                    change={(e: any) => setFirstName(e.currentTarget.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"First name\"\r\n                />\r\n                <Input \r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    change={(e: any) => setEmail(e.currentTarget.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"email\"\r\n                />\r\n                <Input \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    change={(e: any) => setPassword(e.currentTarget.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <Submit className='submit' disabled={loading} text={loading ? \"Loading...\" : \"Sign In\"} name='sub'/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","G:\\мои файлы\\Ger\\news\\src\\components\\button\\Button.tsx",["110","111"],"import react,{ FC }  from 'react';\r\n\r\nimport './Button.css';\r\n\r\ntype propsT = {\r\n    readonly title: string\r\n    click?: () => void;\r\n};\r\nconst Button = (props: propsT) => {\r\n    return (\r\n        <button className='btn-auth' onClick={props.click}>{props?.title}</button>\r\n    );\r\n};\r\nexport default Button;","G:\\мои файлы\\Ger\\news\\src\\components\\input\\Input.tsx",["112"],"import react,{ FC }  from 'react';\r\n\r\nimport './input.css';\r\n\r\ntype propsT = {\r\n    readonly type: string,\r\n    readonly name: string,\r\n    readonly placeholder: string,\r\n    readonly className: string,\r\n    readonly value: string\r\n    change?: any;\r\n};\r\nconst Input:FC<propsT> = ({type, name, placeholder, className, value, change }) => {\r\n    return (\r\n        <input \r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={className}\r\n        onChange={(e) => change(e)}\r\n        autoComplete=\"off\"\r\n        required\r\n      />\r\n    );\r\n};\r\nexport default Input;","G:\\мои файлы\\Ger\\news\\src\\pages\\signin\\signIn.tsx",[],"G:\\мои файлы\\Ger\\news\\src\\components\\submit\\submit.tsx",["113"],"import react,{ FC }  from 'react';\r\n\r\nimport './submit.css';\r\n\r\ntype propsT = {\r\n    readonly name: string,\r\n    readonly text: string,\r\n    readonly className: string,\r\n    disabled: boolean\r\n};\r\nconst Submit:FC<propsT> = ({name, text, className, disabled }) => {\r\n    return (\r\n        <button \r\n            type='submit'\r\n            name={name}\r\n            disabled={disabled}\r\n            className={className}\r\n      >{text}</button>\r\n    );\r\n};\r\nexport default Submit;","G:\\мои файлы\\Ger\\news\\src\\components\\message\\Message.tsx",["114"],"import react,{ FC }  from 'react';\r\n\r\nimport './message.css';\r\n\r\ntype propsT = {\r\n    readonly text: string,\r\n    className: string\r\n};\r\nconst Message:FC<propsT> = ({ text, className }) => {\r\n    return (\r\n        <div className='error_wrapper'>\r\n            <p className={className}>{text}</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Message;","G:\\мои файлы\\Ger\\news\\src\\pages\\home\\home.tsx",["115"],"import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nimport { loadArticles } from '../../actions/articleActions';\r\nimport { RootState } from '../../reducers/index';\r\nimport './home.css';\r\n\r\ninterface IArticle {\r\n    id: string;\r\n    rating: number;\r\n    ratingCount: number;\r\n    shortDescription: string;\r\n    title: string;\r\n};\r\n\r\nconst Home: FC = () => {\r\n    const { articles } = useSelector((state: RootState) => state.articles);\r\n    const dispatch = useDispatch();\r\n    useEffect (() => {\r\n        fetch(\"http://localhost:4000/articles\")\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            dispatch(loadArticles(result));\r\n        })\r\n    },[]); \r\n    return (\r\n        <section className='articles'>\r\n            <div className='container'>\r\n                <div className='articles__wrapper'>\r\n                    {\r\n                        articles && articles.map((item: IArticle ) => (\r\n                            <div className='articles__item' key={item.id}>\r\n                                <h3>{item.title}</h3>\r\n                                <p><span>Description: </span>{item.shortDescription}</p>\r\n                                <div className='article__setting'>\r\n                                    <p><span>Rating: </span>{item.rating}</p>\r\n                                    <Link to={`/news/${item.id}`}>learn more</Link> \r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Home;","G:\\мои файлы\\Ger\\news\\src\\pages\\news\\news.tsx",["116"],"import React, { FC, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useParams, Redirect, Link } from \"react-router-dom\";\r\nimport { loadNews } from '../../actions/articleActions';\r\nimport { RootState } from '../../reducers/index';\r\nimport Button from '../../components/button/Button';\r\n\r\ninterface Inews {\r\n    id: string;\r\n    title: string\r\n    content: string;\r\n};\r\n\r\ninterface IParams {\r\n    id: string;\r\n}\r\n  \r\nconst News: FC = () => {\r\n    const [ isDeleted, setIsDeleted ] = useState<boolean>(false);\r\n    const { newses } = useSelector((state: RootState) => state.articles);\r\n    const { user, authenticated } = useSelector((state: RootState) => state.auth);\r\n    const isAdmin: boolean = authenticated && user?.email === 'germes547@gmail.com';\r\n    const { id } = useParams<IParams>();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        (async function (){\r\n          await fetch(\"http://localhost:4000/fullArticles\")\r\n          .then(res => res.json())\r\n          .then((result) => {\r\n              dispatch(loadNews(result));\r\n          })\r\n     })();\r\n    });\r\n    const deliteNews = async() => {\r\n        await Promise.all([\r\n            fetch(`http://localhost:4000/articles/${id}`, {\r\n                method: 'DELETE',\r\n            }),\r\n            fetch(`http://localhost:4000/fullArticles/${id}`, {\r\n                method: 'DELETE',\r\n            })\r\n        ]).then(() => {setIsDeleted(true)});\r\n    }\r\n  \r\n    return (\r\n        <section className='articles'>\r\n            <div className='container'>\r\n                <div className='articles__wrapper'>\r\n                    {\r\n                        newses != null && newses.filter((item: Inews) => item.id == id).map((item: Inews) => (\r\n                            <div key={item.id}>\r\n                                <h3>{item.title}</h3>\r\n                                <p><span>Description: </span>{item.content}</p>\r\n                                {isAdmin && \r\n                                <div>\r\n                                    <Link to={`/edit/${item.id}`}>edit</Link>\r\n                                    <Button title={'Delete'} click={deliteNews}/>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            {isDeleted && <Redirect to='/' />}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default News;","G:\\мои файлы\\Ger\\news\\src\\actions\\articleActions.ts",[],"G:\\мои файлы\\Ger\\news\\src\\actions\\articleActionsTypes.ts",[],"G:\\мои файлы\\Ger\\news\\src\\reducers\\articlesReducer.ts",[],"G:\\мои файлы\\Ger\\news\\src\\pages\\add\\add.tsx",["117","118","119"],"import React, { FC, useState, useEffect, FormEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { RootState } from '../../reducers/index';\r\nimport Input from '../../components/input/Input';\r\nimport Submit from '../../components/submit/submit';\r\nimport Textarea from '../../components/textarea/textarea';\r\nimport { loadNews, loadArticles } from '../../actions/articleActions';\r\n\r\nconst Add: FC = () => {\r\n    const [ title, setTitle ] = useState<string>('');\r\n    const [ shortDescription, setShortDexcription ] = useState<string>('');\r\n    const [ content, setContent ] = useState<string>('');\r\n    const { articles, newses } = useSelector((state: RootState) => state.articles);\r\n    const [ isAdd, setIsAdd ] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (articles.length == 0) {\r\n            fetch(\"http://localhost:4000/articles\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                dispatch(loadArticles(result));\r\n            })\r\n        }\r\n        if (newses.length == 0) {\r\n            fetch(\"http://localhost:4000/fullArticles\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                dispatch(loadNews(result));\r\n            })\r\n        }\r\n    },[]);\r\n\r\n    const addNews = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        const newArticle = {\r\n            id: !articles[articles.length - 1] ? 1 : Number(articles[articles.length - 1]?.id) + 1,\r\n            title: title,\r\n            shortDescription: shortDescription,\r\n            rating: 0,\r\n            ratingCount: 0\r\n        };\r\n        const newNews = {\r\n            id: !articles[articles.length - 1] ? 1 : Number(articles[articles.length - 1]?.id) + 1,\r\n            title: title,\r\n            content: content,\r\n        };\r\n\r\n        \r\n        await Promise.all([\r\n            await fetch(\"http://localhost:4000/articles\", {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(newArticle),\r\n            })\r\n                .then(res => res.json()),\r\n            await fetch(\"http://localhost:4000/fullArticles\", {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(newNews),\r\n            })\r\n            .then(() => setIsAdd(true))\r\n        ]);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"form_wrapper\">\r\n            <h2>Add News</h2>\r\n            {/* <Message className={error ? 'show-err' : ''} text={error}/> */}\r\n            <form onSubmit={(e) => addNews(e)}>\r\n                <Input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    change={(e: any) => setTitle(e.currentTarget.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"Title\"\r\n                />\r\n                 <Input \r\n                    type=\"text\"\r\n                    name=\"shortDescription\"\r\n                    value={shortDescription}\r\n                    change={(e: any) => setShortDexcription(e.currentTarget.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"Short Description\"\r\n                />\r\n                <Textarea \r\n                    placeholder=\"content\" \r\n                    className=\"input\" \r\n                    change={(e: any) => setContent(e.currentTarget.value)} \r\n                    value={content}\r\n                />\r\n                {/* <p><Link to=\"/forgot-password\">Forgot password ?</Link></p> */}\r\n                <Submit className='submit'  text={ \"add\"} name='sub'/> \r\n                {isAdd && <Redirect to='/' />}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Add;","G:\\мои файлы\\Ger\\news\\src\\pages\\edit\\edit.tsx",["120","121"],"import React, { FC, useState, useEffect, FormEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\nimport { Article } from '../../actions/articleActionsTypes';\r\nimport { RootState } from '../../reducers/index';\r\nimport Input from '../../components/input/Input';\r\nimport Textarea from '../../components/textarea/textarea';\r\nimport Submit from '../../components/submit/submit';\r\nimport { loadArticles } from '../../actions/articleActions';\r\n\r\n\r\ninterface IParams {\r\n    id: string;\r\n}\r\n\r\ninterface Inews {\r\n    id: string;\r\n    title: string\r\n    content: string;\r\n};\r\n\r\nconst Edit: FC = () => {\r\n    const { articles, newses } = useSelector((state: RootState) => state.articles);\r\n    const { id } = useParams<IParams>();\r\n    const dispatch = useDispatch();\r\n    const editArticle: Array<Article>= articles.filter((item: Article) => Number(item.id) == Number(id));\r\n    const editNews: Array<Inews> = newses.filter((item: Inews) => Number(item.id) == Number(id));\r\n    const [ title, setTitle ] = useState<string>('');\r\n    const [ shortDescription, setShortDexcription ] = useState<string>('');\r\n    const [ content, setContent ] = useState<string>('');\r\n    const [ isEdited, setIsEdited ] = useState<boolean>(false);\r\n\r\n    if (title === '' && editArticle[0] && editNews[0]) {\r\n        setTitle(editArticle[0].title);\r\n        setShortDexcription(editArticle[0].shortDescription);\r\n        setContent(editNews[0].content);\r\n    }\r\n    if (title === '' && !editArticle[0] && editNews[0]) {\r\n        fetch(\"http://localhost:4000/articles\")\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            dispatch(loadArticles(result));\r\n        })\r\n    }\r\n    \r\n    const editNewsHandler = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        const editedArticle = {\r\n            id: id,\r\n            title: title,\r\n            shortDescription: shortDescription,\r\n            rating: articles[0].rating,\r\n            ratingCount: articles[0].rating\r\n        };\r\n        const editedNews = {\r\n            id: id,\r\n            title: title,\r\n            content: content,\r\n        };\r\n        \r\n        await Promise.all([\r\n            await fetch(`http://localhost:4000/articles/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(editedArticle),\r\n            }),\r\n            await fetch(`http://localhost:4000/fullArticles/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(editedNews),\r\n            })\r\n            .then(() => {\r\n                setIsEdited(true)\r\n            })\r\n            .then( async() => {\r\n                await fetch(\"http://localhost:4000/articles\")\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    dispatch(loadArticles(result));\r\n                })\r\n            })\r\n        ]);\r\n    }\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsEdited(false);\r\n            setTitle('');\r\n            setShortDexcription('');\r\n            setContent('');\r\n        }\r\n      }, []);\r\n    \r\n    return (\r\n        <div className=\"form_wrapper\">\r\n            <h2>Edit News</h2>\r\n            {/* <Message className={error ? 'show-err' : ''} text={error}/> */}\r\n            <form onSubmit={(e) => editNewsHandler(e)}>\r\n                <Input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    change={(e: any) => setTitle(e.currentTarget.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"Title\"\r\n                />\r\n                 <Input \r\n                    type=\"text\"\r\n                    name=\"shortDescription\"\r\n                    value={shortDescription}\r\n                    change={(e: any) => setShortDexcription(e.currentTarget.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"Short Description\"\r\n                />\r\n                <Textarea \r\n                    placeholder=\"content\" \r\n                    className=\"input\" \r\n                    change={(e: any) => setContent(e.currentTarget.value)} \r\n                    value={content}\r\n                />\r\n\r\n\r\n                <Submit className='submit'  text={ \"edit\"} name='sub'/> \r\n                {isEdited && <Redirect to={`/news/${id}`} />}\r\n                {newses.length === 0 && <Redirect to='/' />}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Edit;","G:\\мои файлы\\Ger\\news\\src\\components\\textarea\\textarea.tsx",["122"],"import react,{ FC }  from 'react';\r\n\r\n//import './input.css';\r\n\r\ntype propsT = {\r\n    readonly placeholder: string,\r\n    readonly className: string,\r\n    readonly value: string\r\n    change?: any;\r\n};\r\nconst Textarea:FC<propsT> = ({  placeholder, className, value, change }) => {\r\n    return (\r\n        <textarea placeholder={placeholder} className={className} onChange={(e) => change(e)} value={value}></textarea>\r\n\r\n    );\r\n};\r\nexport default Textarea;",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":43,"column":6,"nodeType":"129","endLine":43,"endColumn":8,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":67,"nodeType":"133","messageId":"134","endLine":1,"endColumn":78},{"ruleId":"131","severity":1,"message":"135","line":41,"column":15,"nodeType":"133","messageId":"134","endLine":41,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":20,"column":10,"nodeType":"129","endLine":20,"endColumn":12,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"138","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":18},{"ruleId":"131","severity":1,"message":"137","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"137","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"137","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":26,"column":7,"nodeType":"129","endLine":26,"endColumn":9,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":51,"column":82,"nodeType":"142","messageId":"143","endLine":51,"endColumn":84},{"ruleId":"140","severity":1,"message":"141","line":19,"column":29,"nodeType":"142","messageId":"143","endLine":19,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":26,"column":27,"nodeType":"142","messageId":"143","endLine":26,"endColumn":29},{"ruleId":"127","severity":1,"message":"144","line":33,"column":7,"nodeType":"129","endLine":33,"endColumn":9,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"141","line":27,"column":91,"nodeType":"142","messageId":"143","endLine":27,"endColumn":93},{"ruleId":"140","severity":1,"message":"141","line":28,"column":83,"nodeType":"142","messageId":"143","endLine":28,"endColumn":85},{"ruleId":"131","severity":1,"message":"137","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["148"],"@typescript-eslint/no-unused-vars","'SET_SUCCESS' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.",["149"],"'react' is defined but never used.","'FC' is defined but never used.",["150"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'articles.length', 'dispatch', and 'newses.length'. Either include them or remove the dependency array.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"152","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [dispatch]",{"range":"158","text":"159"},{"range":"160","text":"159"},{"range":"161","text":"159"},"Update the dependencies array to be: [articles.length, dispatch, newses.length]",{"range":"162","text":"163"},[1416,1418],"[dispatch]",[793,795],[766,768],[1361,1363],"[articles.length, dispatch, newses.length]"]